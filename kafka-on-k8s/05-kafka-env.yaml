apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: middleware
spec:
  selector:
     matchLabels:
        app: kafka
  serviceName: kafka
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: app
                operator: In
                values:
                - elasticsearch
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - elasticsearch
            topologyKey: kubernetes.io/hostname
      containers:
      - name: kafka
        imagePullPolicy: IfNotPresent
        image: harbor.xxxx.net.cn/library/kafka:3.8.0
        env:
        - name: KAFKA_HEAP_OPTS
          value : "-Xmx256M -Xms256M"
        - name: KAFKA_OPTS
          value: "-Dlogging.level=INFO"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        command:
        - sh
        - -exc
        - |
          export CLUSTER_ID="6PMpHYL9QkeyXRj9Nrp4KA"
          export KAFKA_PROCESS_ROLES="broker,controller"
          export KAFKA_NODE_ID=${HOSTNAME##*-}
          export KAFKA_LISTENERS="PLAINTEXT://${POD_NAME}.kafka:9092,CONTROLLER://${POD_NAME}.kafka:9093"
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka:9092
          export KAFKA_CONTROLLER_QUORUM_VOTERS="0@kafka-0.kafka:9093,1@kafka-1.kafka:9093,2@kafka-2.kafka:9093"
          export KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
          exec /etc/kafka/docker/run
            
        resources:
          requests:
            memory: "128Mi"
            cpu: 10m
        ports:
        - containerPort: 9092
          name: server
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        #- name: kafka-config
        #  mountPath: /tmp/server.properties
        #  subPath: server.properties
      volumes:
        - hostPath:
            path: /etc/localtime
            type: File
          name: localtime
      #  - name: kafka-config
      #    configMap:
      #      name: kafka-config
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        storageClassName: csi-rbd-sc
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi

