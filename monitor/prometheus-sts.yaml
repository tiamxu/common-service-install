apiVersion: apps/v1
kind: StatefulSet 
metadata:
  name: prometheus
  namespace: monitor
  labels:
    app.kubernetes.io/name: prometheus
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  serviceName: prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus
    spec:
      containers:
        - name: config-reload
          args:
            - --reload-url=http://$(POD_IP):9090/-/reload
            - --config-file=/etc/prometheus/prometheus.yml
            - --watched-dir=/etc/prometheus/rules
          image: harbor.xxx.cn/library/prometheus-config-reloader:v0.79.0
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          resources:
            limits:
              memory: 50Mi
            requests:
              memory: 10Mi
          volumeMounts:
            - mountPath: /etc/prometheus/
              name: config
        - name: prometheus
          image: harbor.xxx.cn/library/prometheus:v3.0.0
          imagePullPolicy: IfNotPresent
          args:
            - --storage.tsdb.path=/prometheus
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.retention.time=3h
            - --web.enable-lifecycle
            - --storage.tsdb.no-lockfile
            - --storage.tsdb.max-block-duration=2h
            - --storage.tsdb.min-block-duration=2h
          ports:
            - containerPort: 9090
              name: server
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 500M
            limits:
              cpu: 1
              memory: 2Gi
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus/
            - name: rules
              mountPath: /etc/prometheus/rules
            - name: prometheus-data
              mountPath: /prometheus
      serviceAccountName: prometheus
      securityContext:
        runAsUser: 0
      volumes:
        - name: config
          configMap:
            defaultMode: 420
            name: prometheus-config
        - name: rules
          configMap:
            defaultMode: 420
            name: prometheus-rules

  
  volumeClaimTemplates:
  - metadata:
      name: prometheus-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "csi-rbd-sc"
      resources:
        requests:
          storage: 10Gi

  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
